{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","className","href","onClick","map","page","handlePageClick","length","items","App","useState","setCurrentPage","setPerPage","visibleItems","filter","item","index","min","id","defaultValue","onChange","e","Number","target","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"mKAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAcnD,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAS,oBAA+B,IAAhBL,EAAoB,WAAa,IAD3D,SAGE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBN,EACfO,QAtBgB,kBAAMP,EAAc,GACzCC,EAAaD,EAAc,IAgBxB,oBAUDE,EAAWM,KAAI,SAAAC,GAAI,OAClB,oBACEJ,UAAS,oBAAeI,IAAST,EAAc,SAAW,IAD5D,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,kBA9BK,SAACE,GACnBT,IAAgBS,GAClBR,EAAaQ,GA4BQC,CAAgBD,IAJjC,SAMGA,KAREA,MAaT,oBACEJ,UAAS,oBAAeL,IAAgBE,EAAWS,OAAS,WAAa,IAD3E,SAGE,mBACE,UAAQ,WACRN,UAAU,YACVC,KAAK,QACL,gBAAeN,IAAgBE,EAAWS,OAC1CJ,QAhDgB,kBAAMP,EAAcE,EAAWS,QACpDV,EAAaD,EAAc,IA0CxB,wBC3DFY,EAAQrB,EAAW,EAAG,IACzBiB,KAAI,SAAAb,GAAC,qBAAYA,MAEPkB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOd,EAAP,KAAoBe,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOf,EAAP,KAAgBiB,EAAhB,KAEMC,EACJL,EAAMM,QAAO,SAACC,EAAMC,GAAP,OAAiBD,IAC5BnB,EAAc,GAAMD,GAAYqB,GACjCA,GAAUpB,EAAcD,EAAU,KAMrC,OACE,sBAAKM,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,oBACkCA,EAAc,GAAKD,EAAU,EAD/D,cACsEI,KAAKkB,IAAIrB,EAAcD,EAASa,EAAMD,QAD5G,eAC0HC,EAAMD,OADhI,OAIA,sBAAKN,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,aAAc,EACdC,SAAU,SAACC,GACTT,EAAWU,OAAOD,EAAEE,OAAOC,QAC3Bb,EAAe,IAPnB,UAUE,wBAAQa,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAAOc,EAAMD,OACbZ,QAASA,EACTC,YAAaA,EACbC,aAxCe,SAACQ,GACpBM,EAAeN,MAyCb,6BACGQ,EAAaT,KAAI,SAAAW,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC1DlCW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.55acfcd8.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = getNumbers(1, Math.ceil(total / perPage));\n\n  const handlePrevClick = () => currentPage > 1\n  && onPageChange(currentPage - 1);\n\n  const handleNextClick = () => currentPage < totalPages.length\n  && onPageChange(currentPage + 1);\n\n  const handlePageClick = (page: number) => {\n    if (currentPage !== page) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevClick}\n        >\n          «\n        </a>\n      </li>\n      {totalPages.map(page => (\n        <li\n          className={`page-item ${page === currentPage ? 'active' : ''}`}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageClick(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={`page-item ${currentPage === totalPages.length ? 'disabled' : ''}`}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages.length}\n          onClick={handleNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const visibleItems\n  = items.filter((item, index) => item\n  && (currentPage - 1) * (perPage) <= index\n  && index <= (currentPage * perPage - 1));\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${(currentPage - 1) * perPage + 1} - ${Math.min(currentPage * perPage, items.length)} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={5}\n            onChange={(e) => {\n              setPerPage(Number(e.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}